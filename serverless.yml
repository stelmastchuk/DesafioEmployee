service:
  name: "employeeRegistration"

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dynamodb-local

custom:
  webpack:
      webpackConfig: ./webpack.config.js
      includeModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true      

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"  

functions:
  CreateEmployer:
    handler: src/functions/CreateEmployer.handle     
    events:
      - http:
          path: /createEmployer
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:PutItem"
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/Employeers"
  UpdateEmployer:
    handler: src/functions/UpdateEmployer.handle     
    events:
      - http:
          path: /updateEmployer/{id}
          method: PUT
          cors: true
          request:
            parameters:
              querystrings:
                foo: true
              paths:
                bar: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:UpdateItem"
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/Employeers"
  DeleteEmployer:
    handler: src/functions/DeleteEmployer.handle     
    events:
      - http:
          path: /deleteEmployer/{id}
          method: DELETE
          cors: true
          request:
            parameters:
              querystrings:
                foo: true
              paths:
                bar: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:DeleteItem"
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/Employeers"
  ListEmployer:
    handler: src/functions/ListEmployer.handle     
    events:
      - http:
          path: /listEmployer/{id}
          method: GET
          cors: true
          request:
            parameters:
              querystrings:
                foo: true
              paths:
                bar: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:GetItem"
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/Employeers"             
  ListAllEmployer:
    handler: src/functions/ListAllEmployers.handle     
    events:
      - http:
          path: /listallEmployer
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:Scan"
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/Employeers"      
          
                
resources:
  Resources:
    dbEmployee:
      Type: AWS::DynamoDB::Table      
      Properties:
        TableName: Employeers
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH                        

